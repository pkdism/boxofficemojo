#scatterD3(data = not_sports_mean_sd, x = local_mean, y = score_sd, lab = genre)
citation()
contributors()
setwd("C:/Users/Pawan.Dwivedi/Desktop/Research Paper/boxofficemojo/src/r")
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
movie.score.matrix[is.na(movie.score.matrix)] = 0
country.score.matrix <- acast(movie.country.score, country~title, value.var = "gross.score")
country.score.matrix[is.na(country.score.matrix)] = 0
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
country.pc <- prcomp(country.score.matrix, center = TRUE, scale = TRUE)
View(country.score.matrix)
source("../../src/r/main.r")
View(movie.country.score)
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
movie.score.matrix[is.na(movie.score.matrix)] = 0
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = guess_value("gross.score"))
movie.score.matrix[is.na(movie.score.matrix)] = 0
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- dcast(movie.country.score, title~country, value.var = ("gross.score"))
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- cast(movie.country.score, title~country, value.var = ("gross.score"))
source("../../src/r/main.r")
library(reshape)
install/install.packages("reshape")
install.packages("reshape")
library(reshape)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- cast(movie.country.score, title~country, value.var = ("gross.score"))
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- dcast(movie.country.score, title~country, value.var = ("gross.score"))
View(movie.score.matrix)
movie.score.matrix <- cast(movie.country.score, title~country, value.var = "gross.score")
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
movie.score.matrix[is.na(movie.score.matrix)] = 0
View(movie.score.matrix)
library(dplyr)
library(tidyr)
library(reshape2)
library("devtools")
library(ggbiplot)
library(scatterD3)
library(fpc)
library(cluster)
library(Rtsne)
library(tsne)
setwd("C:/Users/Pawan.Dwivedi/Desktop/ngage-data-analysis/dish_popularity_analysis/src/r/dimensionality_reduction_jan_2015_nov_2016")
library(R2HTML)
library(plotly)
dim_red <- function(pc_show, movies, num_clusters){
data <- data.frame(pc_show$x[,1:23])
data <- add_rownames(data,"tmsid")
data <- merge(data, movies[c("tmsid")], by = "tmsid", all.y = TRUE)
rownames(data) <- data[,1]
data <- data[,-1]
fit <- kmeans(data,num_clusters)
cluster <- data.frame(fit$cluster)
#plotcluster(data,fit$cluster)
temp <- Rtsne(data, dims = 2, initial_dims = 23, perplexity = 30,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
df <- as.data.frame(temp$Y)
df$tmsid = movies$tmsid
df$title = movies$title
df$genre = movies$genre
df$cluster = cluster$fit.cluster
df <- merge(df, movies)
# return (df)
scatterD3(df, x = V1, y = V2, lab = title, col_var = cluster)
}
source("../VA_per_catogory_jan_2015_nov_2016/load_data.r")
source("../VA_per_catogory_jan_2015_nov_2016/merge_data_left_join.r")
show_dma_users <- load_data("../../../data/show_tms_id-dma-users-jan-2015-nov-2016.tsv")
dma_users <- load_data("../../../data/dma-users-jan-2015-nov-2016.tsv")
show_dma_score <- merge_data_left_join(show_dma_users,dma_users,"dma")
show_dma_score <- show_dma_score[!(is.na(show_dma_score$users.x) & !is.na(show_dma_score$users.y)),]
show_dma_score$score <- with(show_dma_score, show_dma_score$users.x / show_dma_score$users.y)
show_dma_matrix <- acast(show_dma_score, show_tms_id~dma, value.var="score")
View(show_dma_matrix)
View(show_dma_users)
View(show_dma_score)
View(movie.country.score)
str(movie.country.score)
str(show_dma_score)
library(tidyr)
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
View(movie.score.matrix)
View(movie.country.score)
temp <- spread(movie.country.score, country, gross.score)
View(movie.country.score)
movie.country.score <- movie.country.score[-c(1482)]
temp <- spread(movie.country.score, country, gross.score)
movie.country.score <- movie.country.score[-1482,]
temp <- spread(movie.country.score, country, gross.score)
View(temp)
source("../../src/r/main.r")
setwd("C:/Users/Pawan.Dwivedi/Desktop/Research Paper/boxofficemojo/src/r")
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
country.score.matrix <- spread(movie.country.score,title, gross.score)
country.score.matrix[is.na(country.score.matrix)] = 0
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
movie.score.matrix <- as.matrix(movie.score.matrix)
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
movie.score.matrix <- as.matrix(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
str(movie.country.score)
?colMeans
str(movie.score.matrix)
View(movie.score.matrix)
rownames(movie.score.matrix) <- movie.score.matrix[,1]
movie.score.matrix <- as.matrix(movie.score.matrix)
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
View(movie.score.matrix)
movie.score.matrix <- movie.score.matrix[,-1]
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
rownames(movie.score.matrix) <- movie.score.matrix[,1]
movie.score.matrix <- movie.score.matrix[,-1]
View(movie.score.matrix)
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
movie.pc.data <- get_data(movie.pc)
View(movie.pc.data)
country.score.matrix <- spread(movie.country.score,title, gross.score)
country.score.matrix[is.na(country.score.matrix)] = 0
rownames(country.score.matrix) <- country.score.matrix[,1]
country.score.matrix <- country.score.matrix[,-1]
country.pc <- prcomp(country.score.matrix, center = TRUE, scale = TRUE)
country.pc.data <- get_data(country.pc)
View(country.pc.data)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.90) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
rownames(movie.score.matrix) <- movie.score.matrix[,1]
movie.score.matrix <- movie.score.matrix[,-1]
country.score.matrix <- spread(movie.country.score,title, gross.score)
country.score.matrix[is.na(country.score.matrix)] = 0
rownames(country.score.matrix) <- country.score.matrix[,1]
country.score.matrix <- country.score.matrix[,-1]
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
country.pc <- prcomp(country.score.matrix, center = TRUE, scale = TRUE)
movie.pc.data <- get_data(movie.pc)
country.pc.data <- get_data(country.pc)
write.csv(movie.pc.data, file = "../../output/data/movie.pc.data.csv")
write.csv(country.pc.data, file = "../../output/data/country.pc.data.csv")
library("mclust")
library("tibble")
source("../../src/r/main.r")
source("../../src/r/pca.r")
gmm <- function(data, num_clusters, label){
gmm <- Mclust(data, G = num_clusters)
gmm.clusters <- as.data.frame(gmm$classification)
gmm.clusters <- tibble::rownames_to_column(gmm.clusters, var = label)
return(gmm.clusters)
}
movie.gmm.clusters <- gmm(movie.pc.data, 10, "title")
country.gmm.clusters <- gmm(country.pc.data, 4, "country")
View(movie.gmm.clusters)
library("Rtsne")
source("../../src/r/gmm.r")
movie.rtsne <- Rtsne(movie.pc.data, dims = 2, initial_dims = 23, perplexity = 30,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
movie.rtsne.res <- as.data.frame(movie.rtsne$Y)
movie.rtsne.res$title <- movie.gmm.clusters$title
movie.rtsne.res$cluster <- movie.gmm.clusters$`gmm$classification`
scatterD3(data = movie.rtsne.res, x = V1, y = V2, lab = title, col_var = cluster)
scatterD3(data = movie.rtsne.res, x = V1, y = V2, lab = title, col_var = cluster, labels_size = 5)
scatterD3(data = movie.rtsne.res, x = V1, y = V2, lab = title, col_var = cluster, labels_size = 15)
scatterD3(data = movie.rtsne.res, x = V1, y = V2, lab = title, col_var = cluster, labels_size = 20)
country.rtsne <- Rtsne(country.pc.data, dims = 2, initial_dims = 23, perplexity = 5,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
country.rtsne.res <- as.data.frame(country.rtsne$Y)
country.rtsne.res$country <- country.gmm.clusters$country
country.rtsne.res$cluster <- country.gmm.clusters$`gmm$classification`
scatterD3(data = country.rtsne.res, x = V1, y = V2, lab = country, col_var = cluster, labels_size = 20)
scatterD3(data = movie.stats, x = score.mean, y = score.sd, lab = title)
library("dplyr")
library("scatterD3")
library("ggmap")
library("mapproj")
boxofficemojo <- read.csv("../../data/europe_2016.tsv",header = TRUE, quote="", sep = "\t")
boxofficemojo$gross <- as.character(boxofficemojo$gross)
boxofficemojo$gross <- as.character(sub('\\$','',boxofficemojo$gross))
boxofficemojo$gross <- as.character(sub('\"','',boxofficemojo$gross))
boxofficemojo$gross <- as.character(sub('"','',boxofficemojo$gross))
boxofficemojo$gross <- as.character(sub(',','',boxofficemojo$gross))
boxofficemojo$gross <- as.character(sub(',','',boxofficemojo$gross))
boxofficemojo$gross <- as.numeric(boxofficemojo$gross)
boxofficemojo$country <- sub('"','',boxofficemojo$country)
boxofficemojo$country <- sub('"','',boxofficemojo$country)
boxofficemojo$title <- sub('"','',boxofficemojo$title)
boxofficemojo$title <- sub('"','',boxofficemojo$title)
total.gross.country <- boxofficemojo %>% group_by(country) %>% summarise(gross.country = sum(gross))
total.gross.title <- boxofficemojo %>% group_by(title) %>% summarise(gross.title = sum(gross))
data <- inner_join(boxofficemojo, total.gross.title, by = "title")
data <- inner_join(data, total.gross.country, by = "country")
data <- data[c("title","country", "gross", "gross.country")]
data$gross.score <-  with(data, data$gross/data$gross.country)
data <- data %>% filter(gross.score > 0.001)
movie.countrycount <- data %>% group_by(title) %>%
summarise(count.country = n())
data <- inner_join(data,movie.countrycount, by = "title")
data <- data %>% filter(count.country > 4)
movie.country.score <- data[c("title","country","gross.score")]
movie.country.score <- movie.country.score[-1482,]
movie.stats <- movie.country.score %>%
group_by(title) %>%
summarise(score.mean = mean(gross.score), score.sd = sd(gross.score))
scatterD3(data = movie.stats, x = score.mean, y = score.sd, lab = title)
movie.score.matrix <- as.data.frame(movie.score.matrix)
source("../../src/r/pca.r")
movie.score.matrix <- as.data.frame(movie.score.matrix)
movie.score.matrix.scale <- scale(movie.score.matrix, center = TRUE, scale = TRUE)
movie.score.matrix.dist <- dist(movie.score.matrix.scale, method = "euclidean", diag = FALSE, upper = FALSE, p = 2)
movie.score.matrix.hclust <- hclust(movie.score.matrix.dist, method = "ward.D2")
movie.score.matrix <- rownames_to_column(movie.score.matrix, var = "title")
plot(movie.score.matrix.hclust, hang = -1, cex = 0.6, labels = movie.score.matrix$title)
plot(movie.score.matrix.hclust, hang = -1, cex = 1.6, labels = movie.score.matrix$title)
plot(movie.score.matrix.hclust, hang = -1, cex = 1.0, labels = movie.score.matrix$title)
plot(movie.score.matrix.hclust, hang = -1, cex = .8, labels = movie.score.matrix$title)
country.score.matrix <- as.data.frame(country.score.matrix)
country.score.matrix.scale <- scale(country.score.matrix, center = TRUE, scale = TRUE)
country.score.matrix.dist <- dist(country.score.matrix.scale, method = "euclidean", diag = FALSE, upper = FALSE, p = 2)
country.score.matrix.hclust <- hclust(country.score.matrix.dist, method = "ward.D2")
country.score.matrix <- rownames_to_column(country.score.matrix, var = "country")
plot(country.score.matrix.hclust, hang = -1, cex = 0.6, labels = country.score.matrix$country)
plot(country.score.matrix.hclust, hang = -1, cex = 1.0, labels = country.score.matrix$country)
plot(country.score.matrix.hclust, hang = -1, cex = 1.2, labels = country.score.matrix$country)
plot(country.score.matrix.hclust, hang = -1, cex = 0.8, labels = country.score.matrix$country)
plot(country.score.matrix.hclust, hang = -1, cex = 1.2, labels = country.score.matrix$country)
plot(movie.score.matrix.hclust, hang = -1, cex = .8, labels = movie.score.matrix$title)
plot(movie.score.matrix.hclust, hang = -1, cex = .9, labels = movie.score.matrix$title)
8
source("../../src/r/pca.r")
movie.score.matrix <- as.data.frame(movie.score.matrix)
movie.score.matrix.scale <- scale(movie.score.matrix, center = TRUE, scale = TRUE)
movie.score.matrix.dist <- dist(movie.score.matrix.scale, method = "euclidean", diag = FALSE, upper = FALSE, p = 2)
movie.score.matrix.hclust <- hclust(movie.score.matrix.dist, method = "ward.D2")
movie.score.matrix <- rownames_to_column(movie.score.matrix, var = "title")
plot(movie.score.matrix.hclust, hang = -1, cex = .8, labels = movie.score.matrix$title)
plot(movie.score.matrix.hclust, hang = -1, cex = 1.2, labels = movie.score.matrix$title)
library("mclust")
library("tibble")
source("../../src/r/main.r")
source("../../src/r/pca.r")
gmm <- function(data, num_clusters, label){
gmm <- Mclust(data, G = num_clusters)
gmm.clusters <- as.data.frame(gmm$classification)
gmm.clusters <- tibble::rownames_to_column(gmm.clusters, var = label)
return(gmm.clusters)
}
movie.gmm.clusters <- gmm(movie.pc.data, 10, "title")
country.gmm.clusters <- gmm(country.pc.data, 4, "country")
library("Rtsne")
source("../../src/r/gmm.r")
movie.rtsne <- Rtsne(movie.pc.data, dims = 2, initial_dims = 23, perplexity = 30,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
movie.rtsne <- Rtsne(movie.pc.data, dims = 2, initial_dims = 23, perplexity = 15,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
movie.rtsne <- Rtsne(movie.pc.data, dims = 2, initial_dims = 23, perplexity = 5,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
movie.rtsne.res <- as.data.frame(movie.rtsne$Y)
movie.rtsne.res$title <- movie.gmm.clusters$title
movie.rtsne.res$cluster <- movie.gmm.clusters$`gmm$classification`
scatterD3(data = movie.rtsne.res, x = V1, y = V2, lab = title, col_var = cluster, labels_size = 20)
country.rtsne.res <- as.data.frame(country.rtsne$Y)
country.rtsne <- Rtsne(country.pc.data, dims = 2, initial_dims = 23, perplexity = 5,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
country.rtsne.res <- as.data.frame(country.rtsne$Y)
country.rtsne.res$country <- country.gmm.clusters$country
country.rtsne.res$cluster <- country.gmm.clusters$`gmm$classification`
scatterD3(data = country.rtsne.res, x = V1, y = V2, lab = country, col_var = cluster, labels_size = 20)
country.score.matrix <- as.data.frame(country.score.matrix)
country.score.matrix.scale <- scale(country.score.matrix, center = TRUE, scale = TRUE)
country.score.matrix.dist <- dist(country.score.matrix.scale, method = "euclidean", diag = FALSE, upper = FALSE, p = 2)
country.score.matrix.hclust <- hclust(country.score.matrix.dist, method = "ward.D2")
country.score.matrix <- rownames_to_column(country.score.matrix, var = "country")
plot(country.score.matrix.hclust, hang = -1, cex = 1.2, labels = country.score.matrix$country)
scatterD3(data = movie.stats, x = score.mean, y = score.sd, lab = title, labels_size = 20)
all.packages <- installed.packages()
r.version <- paste(version[['major']], '.', version[['minor']], sep = '')
for (i in 1:nrow(all.packages))
for (i in 1:nrow(all.packages))
{
package.name <- all.packages[i, 1]
package.version <- all.packages[i, 3]
if (package.version != r.version)
{
print(paste('Installing', package.name))
install.packages(package.name)
}
}
