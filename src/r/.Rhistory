#install.packages("dplyr")
library(dplyr)
#install.packages("tidyr")
library(tidyr)
#install.packages("stringr")
library(stringr)
#install.packages("scatterD3")
library(scatterD3)
load_data <- function(viewers){
data <- read.table(viewers,header = TRUE, quote="", sep = "\t")
return (data)
}
merge_data_left_join <- function(content_users, total_users, geo_level){
result = merge(content_users,total_users,by = geo_level, all.x  = TRUE)
return (result)
}
genre_tags <- function(content){
genre <- content["genre"]
genre_matrix = data.frame(do.call('rbind', strsplit(as.character(genre$genre),",",fixed = TRUE)))
tags = data.frame(tag = c(as.matrix(genre_matrix)))
tags = unique(tags)
#write.csv(tags, file = "tags.csv")
return (tags)
}
show_count_per_tags <- function(content, tags){
matr <- list()
i = 1
for(tags in tags$tag){
temp <- content %>%
filter(str_detect(genre,toString(tags)))
matr[toString(tags)] <- nrow(temp)
i = i + 1
}
result <- data.frame(unlist(matr))
colnames(result) = c("nshows")
return (result)
}
source("get_genre_tags.r")
content <- read.table("../../../data/content_with_more_than_1000_60s_sessions-jan-2015-nov-2016.tsv", sep = "\t", header = TRUE,quote = "")
content_tags <- genre_tags(content)
movies <- content %>%
filter(grepl("MV",tmsid))
movie_tags <- genre_tags(movies)
shows <- content %>%
filter(!grepl("MV", tmsid))
show_tags <- genre_tags(shows)
news <- shows %>%
filter(str_detect(genre,"News"))
news_tags <- genre_tags(news)
not_news <- shows %>%
filter(!str_detect(genre,"News"))
not_news_tags <- genre_tags(not_news)
#pending
#sports
#pending
#non_sports
source("content_per_genre_tag.r")
show_count_of_all_contents = show_count_per_tags(content,content_tags)
show_count_of_movie_tags = show_count_per_tags(movies,movie_tags)
show_count_of_show_tags = show_count_per_tags(shows,show_tags)
show_count_of_news_tags = show_count_per_tags(news,news_tags)
show_count_of_not_news_tags = show_count_per_tags(not_news,not_news_tags)
source("load_data.r")
source("merge_data_left_join.r")
calculate_mean_sd <- function(tag_users,content_users,total_users,show_details, level){
result <- merge_data_left_join(tag_users, total_users, level)
result <- result[!(is.na(result$users.x) & !is.na(result$users.y)),]
result$score <- with(result, result$users.x / result$users.y)
show_id_score <- result %>%
group_by(tmsid) %>%
summarise(sum = sum(score), local_mean = mean(score))
show_id_score$score_mean_overall <- with(show_id_score, show_id_score$sum / 219.0)
show_id_score$score_mean_overall <- with(show_id_score, show_id_score$sum / 219.0)
show_wise_means_sd<- result %>%
merge(show_id_score,by = "tmsid") %>%
group_by(tmsid) %>%
summarise(sum = sum((score-score_mean_overall)*(score-score_mean_overall)), dma_count = n(), score_mean_overall=max(score_mean_overall), local_mean = max(local_mean)) %>%
mutate(score_sd = sqrt(sum/219.0 + (219-dma_count)*score_mean_overall*score_mean_overall/219.0))
show_wise_means_sd <- merge(show_wise_means_sd,show_details, by.x = "tmsid", by.y = "show_tms_id", all.x = TRUE)
return (show_wise_means_sd)
#  filtered_show_wise_means_sd <- show_wise_means_sd %>%
#    filter(score_sd>0.002)
#
# scatterD3(data = filtered_show_wise_means_sd, x = local_mean, y = score_sd, lab = show_title)
}
source("load_data.r")
source("categorisation.r")
source("calculate_mean_sd.r")
show_details <- load_data("../../../data/show_tms_id-show_title-all.tsv")
content_users <- load_data("../../../data/show_tms_id-dma-users-jan-2015-nov-2016.tsv")
names(content_users) = c("tmsid", "dma", "users")
total_users <- load_data("../../../data/dma-users-jan-2015-nov-2016.tsv")
#total number of users watching movies per dma
movie_users <- merge(movies[c("tmsid")], content_users, by.x = "tmsid", by.y = "tmsid", all.x = TRUE)
#total number of users watching shows (all content except movies) per dma
shows_users <- merge(shows[c("tmsid")], content_users, by.x = "tmsid", by.y = "tmsid", all.x = TRUE)
#total number of users watching news per dma
news_users <- merge(news[c("tmsid")], content_users, by.x = "tmsid", by.y = "tmsid", all.x = TRUE)
#total number of users watching all shows except news per dma
not_news_users <- merge(not_news[c("tmsid")], content_users, by.x = "tmsid", by.y = "tmsid", all.x = TRUE)
#total number of users watching sports per dma
#pending
#total number of users watching all shows content except news and sports
#pending
all_content_mean_sd <- calculate_mean_sd(content_users, content_users,total_users,show_details,"dma")
source("calculate_mean_sd.r")
all_content_mean_sd <- calculate_mean_sd(content_users, content_users,total_users,show_details,"dma")
movies_mean_sd <- calculate_mean_sd(movie_users, content_users,total_users,show_details,"dma")
shows_mean_sd <- calculate_mean_sd(shows_users, content_users,total_users,show_details,"dma")
news_mean_sd <- calculate_mean_sd(news_users, content_users,total_users,show_details,"dma")
not_news_mean_sd <- calculate_mean_sd(not_news_users, content_users,total_users,show_details,"dma")
#pending
#sports_mean_sd <- calculate_mean_sd(sports_users, content_users,total_users,show_details,"dma")
#not_sports_mean_sd <- calculate_mean_sd(not_sports_users, content_users,total_users,show_details,"dma")
scatterD3(data = all_content_mean_sd, x = local_mean, y = score_sd, lab = show_title)
scatterD3(data = movies_mean_sd, x = local_mean, y = score_sd, lab = show_title)
scatterD3(data = shows_mean_sd, x = local_mean, y = score_sd, lab = show_title)
scatterD3(data = news_mean_sd, x = local_mean, y = score_sd, lab = show_title)
scatterD3(data = not_news_mean_sd, x = local_mean, y = score_sd, lab = show_title)
#pending
#scatterD3(data = sports_mean_sd, x = local_mean, y = score_sd, lab = show_title)
#scatterD3(data = not_sports_mean_sd, x = local_mean, y = score_sd, lab = show_title)
scatterD3(data = all_content_mean_sd, x = local_mean, y = score_sd, lab = genre)
scatterD3(data = movies_mean_sd, x = local_mean, y = score_sd, lab = genre)
scatterD3(data = shows_mean_sd, x = local_mean, y = score_sd, lab = genre)
scatterD3(data = news_mean_sd, x = local_mean, y = score_sd, lab = genre)
scatterD3(data = not_news_mean_sd, x = local_mean, y = score_sd, lab = genre)
#pending
#scatterD3(data = sports_mean_sd, x = local_mean, y = score_sd, lab = genre)
#scatterD3(data = not_sports_mean_sd, x = local_mean, y = score_sd, lab = genre)
citation()
contributors()
setwd("C:/Users/Pawan.Dwivedi/Desktop/Research Paper/boxofficemojo/src/r")
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
movie.score.matrix[is.na(movie.score.matrix)] = 0
country.score.matrix <- acast(movie.country.score, country~title, value.var = "gross.score")
country.score.matrix[is.na(country.score.matrix)] = 0
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
country.pc <- prcomp(country.score.matrix, center = TRUE, scale = TRUE)
View(country.score.matrix)
source("../../src/r/main.r")
View(movie.country.score)
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
movie.score.matrix[is.na(movie.score.matrix)] = 0
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = guess_value("gross.score"))
movie.score.matrix[is.na(movie.score.matrix)] = 0
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- dcast(movie.country.score, title~country, value.var = ("gross.score"))
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- cast(movie.country.score, title~country, value.var = ("gross.score"))
source("../../src/r/main.r")
library(reshape)
install/install.packages("reshape")
install.packages("reshape")
library(reshape)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- cast(movie.country.score, title~country, value.var = ("gross.score"))
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- dcast(movie.country.score, title~country, value.var = ("gross.score"))
View(movie.score.matrix)
movie.score.matrix <- cast(movie.country.score, title~country, value.var = "gross.score")
source("../../src/r/main.r")
library(reshape2)
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
movie.score.matrix[is.na(movie.score.matrix)] = 0
View(movie.score.matrix)
library(dplyr)
library(tidyr)
library(reshape2)
library("devtools")
library(ggbiplot)
library(scatterD3)
library(fpc)
library(cluster)
library(Rtsne)
library(tsne)
setwd("C:/Users/Pawan.Dwivedi/Desktop/ngage-data-analysis/dish_popularity_analysis/src/r/dimensionality_reduction_jan_2015_nov_2016")
library(R2HTML)
library(plotly)
dim_red <- function(pc_show, movies, num_clusters){
data <- data.frame(pc_show$x[,1:23])
data <- add_rownames(data,"tmsid")
data <- merge(data, movies[c("tmsid")], by = "tmsid", all.y = TRUE)
rownames(data) <- data[,1]
data <- data[,-1]
fit <- kmeans(data,num_clusters)
cluster <- data.frame(fit$cluster)
#plotcluster(data,fit$cluster)
temp <- Rtsne(data, dims = 2, initial_dims = 23, perplexity = 30,
theta = 0.5, check_duplicates = FALSE, pca = TRUE, max_iter = 1000,
verbose = FALSE, is_distance = FALSE, Y_init = NULL)
df <- as.data.frame(temp$Y)
df$tmsid = movies$tmsid
df$title = movies$title
df$genre = movies$genre
df$cluster = cluster$fit.cluster
df <- merge(df, movies)
# return (df)
scatterD3(df, x = V1, y = V2, lab = title, col_var = cluster)
}
source("../VA_per_catogory_jan_2015_nov_2016/load_data.r")
source("../VA_per_catogory_jan_2015_nov_2016/merge_data_left_join.r")
show_dma_users <- load_data("../../../data/show_tms_id-dma-users-jan-2015-nov-2016.tsv")
dma_users <- load_data("../../../data/dma-users-jan-2015-nov-2016.tsv")
show_dma_score <- merge_data_left_join(show_dma_users,dma_users,"dma")
show_dma_score <- show_dma_score[!(is.na(show_dma_score$users.x) & !is.na(show_dma_score$users.y)),]
show_dma_score$score <- with(show_dma_score, show_dma_score$users.x / show_dma_score$users.y)
show_dma_matrix <- acast(show_dma_score, show_tms_id~dma, value.var="score")
View(show_dma_matrix)
View(show_dma_users)
View(show_dma_score)
View(movie.country.score)
str(movie.country.score)
str(show_dma_score)
library(tidyr)
movie.score.matrix <- acast(movie.country.score, title~country, value.var = "gross.score")
View(movie.score.matrix)
View(movie.country.score)
temp <- spread(movie.country.score, country, gross.score)
View(movie.country.score)
movie.country.score <- movie.country.score[-c(1482)]
temp <- spread(movie.country.score, country, gross.score)
movie.country.score <- movie.country.score[-1482,]
temp <- spread(movie.country.score, country, gross.score)
View(temp)
source("../../src/r/main.r")
setwd("C:/Users/Pawan.Dwivedi/Desktop/Research Paper/boxofficemojo/src/r")
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
country.score.matrix <- spread(movie.country.score,title, gross.score)
country.score.matrix[is.na(country.score.matrix)] = 0
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
movie.score.matrix <- as.matrix(movie.score.matrix)
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
movie.score.matrix <- as.matrix(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
str(movie.country.score)
?colMeans
str(movie.score.matrix)
View(movie.score.matrix)
rownames(movie.score.matrix) <- movie.score.matrix[,1]
movie.score.matrix <- as.matrix(movie.score.matrix)
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
View(movie.score.matrix)
movie.score.matrix <- movie.score.matrix[,-1]
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
View(movie.score.matrix)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.85) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
rownames(movie.score.matrix) <- movie.score.matrix[,1]
movie.score.matrix <- movie.score.matrix[,-1]
View(movie.score.matrix)
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
movie.pc.data <- get_data(movie.pc)
View(movie.pc.data)
country.score.matrix <- spread(movie.country.score,title, gross.score)
country.score.matrix[is.na(country.score.matrix)] = 0
rownames(country.score.matrix) <- country.score.matrix[,1]
country.score.matrix <- country.score.matrix[,-1]
country.pc <- prcomp(country.score.matrix, center = TRUE, scale = TRUE)
country.pc.data <- get_data(country.pc)
View(country.pc.data)
source("../../src/r/main.r")
library(reshape2)
library("tidyr")
get_data <- function(pc){
x <- summary(pc)
vars <- x$sdev^2
vars <- vars/sum(vars)
temp <- data.frame(rbind("SD" = x$sdev, "POV" = vars,
"CP" = cumsum(vars)))
i = 1
for(i in 1:ncol(temp)){
if(temp["CP", i] >= 0.90) break
}
data <- data.frame(pc$x[,1:i])
data = data[1:nrow(data),]
return(data)
}
movie.score.matrix <- spread(movie.country.score,country,gross.score)
movie.score.matrix[is.na(movie.score.matrix)] = 0
rownames(movie.score.matrix) <- movie.score.matrix[,1]
movie.score.matrix <- movie.score.matrix[,-1]
country.score.matrix <- spread(movie.country.score,title, gross.score)
country.score.matrix[is.na(country.score.matrix)] = 0
rownames(country.score.matrix) <- country.score.matrix[,1]
country.score.matrix <- country.score.matrix[,-1]
movie.pc <- prcomp(movie.score.matrix, center = TRUE, scale = TRUE)
country.pc <- prcomp(country.score.matrix, center = TRUE, scale = TRUE)
movie.pc.data <- get_data(movie.pc)
country.pc.data <- get_data(country.pc)
write.csv(movie.pc.data, file = "../../output/data/movie.pc.data.csv")
write.csv(country.pc.data, file = "../../output/data/country.pc.data.csv")
